services:

  api_controle_financeiro:
    build:
      context: ./
      dockerfile: dockerfile
    networks:
      - pgnet
    ports:
      - "8081:8080"

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    networks:
      - pgnet

  postgres_primary:
    image: postgres:13
    container_name: pg_primary
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: password
    command: |
      bash -c "
      pg_ctl init -D /var/lib/postgresql/data || true
      postgres &
      sleep 1
      until pg_isready -h localhost -p 5432 -U postgres; do
        echo 'Aguardando o PostgreSQL iniciar...'
        sleep 1s
      done
      psql -U postgres -c \"ALTER USER postgres WITH PASSWORD 'password';\" || true
      psql -U postgres -c \"CREATE ROLE postgres WITH REPLICATION LOGIN PASSWORD 'password';\" || true
      psql -U postgres -c \"SELECT pg_create_physical_replication_slot('replication_slot_1');\" || true
      psql -U postgres -c \"SELECT pg_create_physical_replication_slot('replication_slot_2');\" || true
      psql -U postgres -c \"GRANT CONNECT ON DATABASE postgres TO postgres;\" || true
      psql -U postgres -c \"GRANT USAGE ON SCHEMA public TO postgres;\" || true
      psql -U postgres -c \"GRANT SELECT ON ALL TABLES IN SCHEMA public TO postgres;\" || true
      psql -U postgres -c \"ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT SELECT ON TABLES TO postgres;\" || true
      echo 'host replication postgres 172.18.0.0/16 trust' >> /var/lib/postgresql/data/pg_hba.conf
      echo 'host all all 172.18.0.0/16 trust' >> /var/lib/postgresql/data/pg_hba.conf
      echo 'host all all 172.18.0.0/16 trust' >> /var/lib/postgresql/data/pg_hba.conf
      pg_ctl reload -D /var/lib/postgresql/data
      wait
      "
    user: postgres
    volumes:
      - pg_primary_data:/var/lib/postgresql/data
    networks:
      - pgnet

  postgres_replica_1:
    image: postgres:13
    container_name: pg_replica_1
    environment:
      PGUSER: postgres
      PGPASSWORD: password
      PGDATA: /var/lib/postgresql/data
    command: |
      bash -c "
      until pg_basebackup --pgdata=/var/lib/postgresql/data -R --slot=replication_slot_1 --host=pg_primary --port=5432 --username=postgres
      do
        echo 'Waiting for primary to connect...'
        sleep 1s
      done
      echo 'Backup done, starting replica...'
      chown -R postgres:postgres /var/lib/postgresql/data
      chmod -R 0700 /var/lib/postgresql/data
      echo 'host replication postgres 172.18.0.0/16 trust' >> /var/lib/postgresql/data/pg_hba.conf
      echo 'host all all 172.18.0.0/16 trust' >> /var/lib/postgresql/data/pg_hba.conf
      su - postgres -c '/usr/lib/postgresql/13/bin/postgres -D /var/lib/postgresql/data'
      "
    depends_on:
      - postgres_primary
    networks:
      - pgnet

  postgres_replica_2:
    image: postgres:13
    container_name: pg_replica_2
    environment:
      PGUSER: postgres
      PGPASSWORD: password
      PGDATA: /var/lib/postgresql/data
    command: |
      bash -c "
      until pg_basebackup --pgdata=/var/lib/postgresql/data -R --slot=replication_slot_2 --host=pg_primary --port=5432 --username=postgres
      do
        echo 'Waiting for primary to connect...'
        sleep 5s
      done
      echo 'Backup done, starting replica...'
      chown -R postgres:postgres /var/lib/postgresql/data
      chmod -R 0700 /var/lib/postgresql/data
      echo 'host replication postgres 172.18.0.0/16 trust' >> /var/lib/postgresql/data/pg_hba.conf
      echo 'host all all 172.18.0.0/16 trust' >> /var/lib/postgresql/data/pg_hba.conf
      su - postgres -c '/usr/lib/postgresql/13/bin/postgres -D /var/lib/postgresql/data'
      "
    depends_on:
      - postgres_primary
    networks:
      - pgnet

  pgpool:
    image: pgpool/pgpool
    container_name: pgpool
    environment:
      - PGPOOL_PARAMS_LOAD_BALANCE_MODE=on
      - PGPOOL_PARAMS_MASTER_SLAVE_MODE=on
      - PGPOOL_PARAMS_MASTER_SLAVE_SUB_MODE=write_only
      - PGPOOL_PARAMS_POOL_MODE=session
      - PGPOOL_PARAMS_LOG_PER_NODE_STATEMENT=all
      - PGPOOL_PARAMS_LOG_STATEMENT=all
      - PGPOOL_PARAMS_LOG_CONNECTIONS=password
      - PGPOOL_PARAMS_LOG_DISCONNECTIONS=postgres
      - PGPOOL_PARAMS_SR_CHECK_USER=postgres
      - PGPOOL_PARAMS_SR_CHECK_PASSWORD=password
      - PGPOOL_PARAMS_POSTGRES_USER=postgres
      - PGPOOL_PARAMS_POSTGRES_PASSWORD=password
      - PGPOOL_ADMIN_PASSWORD=admin_password
      - PGPOOL_PASSWORD=password
      - PGPOOL_PCP_USER=admin
      - PGPOOL_PCP_PASSWORD=password
      - PGPOOL_PARAMS_BACKEND_HOSTNAME0=pg_primary
      - PGPOOL_PARAMS_BACKEND_PORT0=5432
      - PGPOOL_PARAMS_BACKEND_WEIGHT0=1
      - PGPOOL_PARAMS_BACKEND_HOSTNAME1=pg_replica_1
      - PGPOOL_PARAMS_BACKEND_PORT1=5432
      - PGPOOL_PARAMS_BACKEND_WEIGHT1=1
      - PGPOOL_PARAMS_BACKEND_HOSTNAME2=pg_replica_2
      - PGPOOL_PARAMS_BACKEND_PORT2=5432
      - PGPOOL_PARAMS_BACKEND_WEIGHT2=1
    ports:
      - "5430:9999"
    volumes:
      - ./pgpool.conf:/opt/pgpool-II/etc/pgpool.conf
    networks:
      - pgnet

volumes:
  pg_primary_data:
  pg_replica_data:

networks:
  pgnet:
